name: CI Pipeline

on:
 push:
  branches: [main]
 pull_request:
  branches: [main]

jobs:
 lint-and-build:
  runs-on: ubuntu-latest

  strategy:
   matrix:
    node-version: [18.x, 20.x]

  steps:
   - name: Checkout code
     uses: actions/checkout@v4

   - name: Setup Node.js ${{ matrix.node-version }}
     uses: actions/setup-node@v4
     with:
      node-version: ${{ matrix.node-version }}
      cache: 'npm'
      cache-dependency-path: |
       apps/frontend/package-lock.json
       apps/server/package-lock.json

   - name: Install frontend dependencies
     run: |
      cd apps/frontend
      npm ci

   - name: Install server dependencies
     run: |
      cd apps/server
      npm ci

   - name: Run frontend lint
     run: |
      cd apps/frontend
      npm run lint

   - name: Run frontend build
     run: |
      cd apps/frontend
      npm run build

   - name: Run server build
     run: |
      cd apps/server
      npm run build

   - name: Upload frontend build artifacts
     uses: actions/upload-artifact@v4
     with:
      name: frontend-build-${{ matrix.node-version }}
      path: apps/frontend/dist

   - name: Upload server build artifacts
     uses: actions/upload-artifact@v4
     with:
      name: server-build-${{ matrix.node-version }}
      path: apps/server/dist

 docker-build:
  runs-on: ubuntu-latest
  needs: lint-and-build

  steps:
   - name: Checkout code
     uses: actions/checkout@v4

   - name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v3

   - name: Build frontend Docker image
     uses: docker/build-push-action@v5
     with:
      context: ./apps/frontend
      file: ./apps/frontend/Dockerfile
      push: false
      tags: hr-frontend:${{ github.sha }}
      cache-from: type=gha
      cache-to: type=gha,mode=max

   - name: Build server Docker image
     uses: docker/build-push-action@v5
     with:
      context: ./apps/server
      file: ./apps/server/Dockerfile
      push: false
      tags: hr-server:${{ github.sha }}
      cache-from: type=gha
      cache-to: type=gha,mode=max

 security-scan:
  runs-on: ubuntu-latest
  needs: lint-and-build

  steps:
   - name: Checkout code
     uses: actions/checkout@v4

   - name: Run npm audit for frontend
     run: |
      cd apps/frontend
      npm audit --audit-level moderate
     continue-on-error: true

   - name: Run npm audit for server
     run: |
      cd apps/server
      npm audit --audit-level moderate
     continue-on-error: true
